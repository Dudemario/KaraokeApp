"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var constants_1 = require("./constants");
var root_1 = __importDefault(require("./root"));
var space_1 = __importDefault(require("./space"));
var use_line_index_1 = __importDefault(require("./use_line_index"));
var constants_2 = require("../../constants");
var use_auto_scroll_1 = __importDefault(require("./use_auto_scroll"));
var use_event_1 = __importDefault(require("../../utils/use_event"));
var use_scroll_action_1 = __importDefault(require("./use_scroll_action"));
var space = (0, jsx_runtime_1.jsx)(space_1.default, {});
function BaseLrc(_a, ref) {
    var lines = _a.lines, lineRenderer = _a.lineRenderer, _b = _a.currentMillisecond, currentMillisecond = _b === void 0 ? constants_2.DEFAULT_PROPS.currentMillisecond : _b, _c = _a.verticalSpace, verticalSpace = _c === void 0 ? constants_2.DEFAULT_PROPS.verticalSpace : _c, _d = _a.recoverAutoScrollInterval, recoverAutoScrollInterval = _d === void 0 ? constants_2.DEFAULT_PROPS.recoverAutoScrollInterval : _d, _e = _a.recoverAutoScrollSingal, recoverAutoScrollSingal = _e === void 0 ? constants_2.DEFAULT_PROPS.recoverAutoScrollSingal : _e, onLineUpdate = _a.onLineUpdate, onWheel = _a.onWheel, onKeyDown = _a.onKeyDown, onMouseDown = _a.onMouseDown, onMouseUp = _a.onMouseUp, onMouseMove = _a.onMouseMove, props = __rest(_a, ["lines", "lineRenderer", "currentMillisecond", "verticalSpace", "recoverAutoScrollInterval", "recoverAutoScrollSingal", "onLineUpdate", "onWheel", "onKeyDown", "onMouseDown", "onMouseUp", "onMouseMove"]);
    var rootRef = (0, react_1.useRef)(null);
    var lineIndex = (0, use_line_index_1.default)(lines, currentMillisecond);
    var _f = (0, use_auto_scroll_1.default)({
        recoverAutoScrollInterval: recoverAutoScrollInterval,
        recoverAutoScrollSingal: recoverAutoScrollSingal,
    }), autoScroll = _f.autoScroll, onLocalAutoScrollWheel = _f.onWheel, onLocalAutoScrollKeyDown = _f.onKeyDown, onLocalAutoScrollMouseDown = _f.onMouseDown, onLocalAutoScrollMouseUp = _f.onMouseUp, onLocalAutoScrollMove = _f.onMouseMove;
    (0, use_scroll_action_1.default)({
        root: rootRef.current,
        autoScroll: autoScroll,
        lineIndex: lineIndex,
        lines: lines,
        verticalSpace: verticalSpace,
    });
    (0, react_1.useEffect)(function () {
        if (onLineUpdate) {
            onLineUpdate({
                index: lineIndex,
                line: lines[lineIndex] || null,
            });
        }
    }, [onLineUpdate, lineIndex, lines]);
    (0, react_1.useImperativeHandle)(ref, function () { return rootRef.current; });
    var onWheelWrapper = (0, use_event_1.default)(function (event) {
        onLocalAutoScrollWheel();
        return onWheel && onWheel(event);
    });
    var onKeyDownWrapper = (0, use_event_1.default)(function (event) {
        onLocalAutoScrollKeyDown(event);
        return onKeyDown && onKeyDown(event);
    });
    var onMouseDownWrapper = (0, use_event_1.default)(function (event) {
        onLocalAutoScrollMouseDown();
        return onMouseDown && onMouseDown(event);
    });
    var onMouseUpWrapper = (0, use_event_1.default)(function (event) {
        onLocalAutoScrollMouseUp();
        return onMouseUp && onMouseUp(event);
    });
    var onMouseMoveWrapper = (0, use_event_1.default)(function (event) {
        onLocalAutoScrollMove();
        return onMouseMove && onMouseMove(event);
    });
    var lineNodes = (0, react_1.useMemo)(function () {
        return lines.map(function (line, index) { return ((0, jsx_runtime_1.jsx)("div", __assign({ className: constants_1.LINE_CLASSNAME }, { children: lineRenderer({ index: index, active: lineIndex === index, line: line }) }), line.id)); });
    }, [lineIndex, lineRenderer, lines]);
    return ((0, jsx_runtime_1.jsxs)(root_1.default
    /** tabIndex make focusable and enable to add keyboard listener */
    , __assign({ 
        /** tabIndex make focusable and enable to add keyboard listener */
        tabIndex: -1 }, props, { onWheel: onWheelWrapper, onKeyDown: onKeyDownWrapper, onMouseDown: onMouseDownWrapper, onMouseUp: onMouseUpWrapper, onMouseMove: onMouseMoveWrapper, ref: rootRef }, { children: [verticalSpace ? space : null, lineNodes, verticalSpace ? space : null] })));
}
exports.default = (0, react_1.forwardRef)(BaseLrc);
